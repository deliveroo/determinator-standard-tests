[
  {
    "section": "Basic GUID bucketing functionality",
    "examples": [
      {
        "why": "GUID bucketed, full rollout features should be on for any GUID",
        "feature": "feature_flags/simple/full_rollout_guid.json",
        "id": null,
        "guid": "5b189db0-dc19-4b0f-b06e-68e7ffa2e5b8",
        "properties": {},
        "returns": true
      },{
        "why": "GUID bucketed, full rollout features should fail when no GUID given",
        "feature": "feature_flags/simple/full_rollout_guid.json",
        "id": "whatever",
        "guid": null,
        "properties": {},
        "error": true,
        "returns": false
      }
    ]
  },{
    "section": "GUID bucketing experiment functionality",
    "examples": [
      {
        "why": "This experiment results in variant 'a' for this GUID",
        "feature": "experiments/a_b_guid.json",
        "id": null,
        "guid": "5a5585fb-ac14-4566-b41f-fa6f4531fcdc",
        "properties": {},
        "returns": "a"
      },{
        "why": "This experiment results in variant 'b' for this GUID",
        "feature": "experiments/a_b_guid.json",
        "id": null,
        "guid": "b61ca515-a9a8-453d-b84d-ca23d325f784",
        "properties": {},
        "returns": "b"
      },{
        "why": "The rollout of this experiment means this GUID is excluded",
        "feature": "experiments/off_guid.json",
        "id": null,
        "guid": "5a5585fb-ac14-4566-b41f-fa6f4531fcdc",
        "properties": {},
        "returns": false
      },{
        "why": "When a winning variant is specified, all actors that are rolled out to will see that variant",
        "feature": "experiments/a_b_guid_with_winner.json",
        "id": null,
        "guid": "5a5585fb-ac14-4566-b41f-fa6f4531fcdc",
        "properties": {},
        "returns": "b"
      },{
        "why": "When a winning variant is specified, all actors that are not rolled out to will still not be in the experiment",
        "feature": "experiments/a_b_guid_with_winner.json",
        "id": null,
        "guid": "5b189db0-dc19-4b0f-b06e-68e7ffa2e5b8",
        "properties": {},
        "returns": false
      },{
        "why": "Variants are ordered alphanumerically before the correct one is picked",
        "feature": "experiments/b_a_guid.json",
        "id": null,
        "guid": "5a5585fb-ac14-4566-b41f-fa6f4531fcdc",
        "properties": {},
        "returns": "a"
      },{
        "why": "An actor will be assigned to a fixed variant if its properties overlap with a fixed determinations properties",
        "feature": "experiments/always_assign_to_one_variant.json",
        "id": null,
        "guid": "5a5585fb-ac14-4566-b41f-fa6f4531fcdc",
        "properties": {
          "attribute": ["e"]
        },
        "returns": "a"
      }
    ]
  },{
    "section": "Basic ID bucketing functionality",
    "examples": [
      {
        "why": "ID bucketed, full rollout features should be on for any ID",
        "feature": "feature_flags/simple/full_rollout_id.json",
        "id": "10321",
        "guid": null,
        "properties": {},
        "returns": true
      },{
        "why": "ID bucketed, full rollout features should be off when no ID given",
        "feature": "feature_flags/simple/full_rollout_id.json",
        "id": null,
        "guid": "whatever",
        "properties": {},
        "returns": false
      },{
        "why": "IDs can be integers as well as strings",
        "feature": "feature_flags/simple/full_rollout_id.json",
        "id": "10321",
        "guid": null,
        "properties": {},
        "returns": true
      }
    ]
  },{
    "section": "ID bucketing experiment functionality",
    "examples": [
      {
        "why": "This experiment results in variant 'a' for this GUID",
        "feature": "experiments/a_b_id.json",
        "id": "42113",
        "guid": null,
        "properties": {},
        "returns": "a"
      },{
        "why": "This experiment results in variant 'b' for this GUID",
        "feature": "experiments/a_b_id.json",
        "id": "280238",
        "guid": null,
        "properties": {},
        "returns": "b"
      }, {
        "why": "This experiment results in variant 'autochthonal' for this GUID",
        "feature": "experiments/100_variants_id.json",
        "id": "42113",
        "guid": null,
        "properties": {},
        "returns": "autochthonal"
      },{
        "why": "This experiment results in variant 'azimino' for this GUID",
        "feature": "experiments/100_variants_id.json",
        "id": "280239",
        "guid": null,
        "properties": {},
        "returns": "azimino"
      }, {
        "why": "The rollout of this experiment means this GUID is excluded",
        "feature": "experiments/off_id.json",
        "id": "42113",
        "guid": null,
        "properties": {},
        "returns": false
      }
    ]
  },{
    "section": "Basic Fallback bucketing functionality",
    "examples": [
      {
        "why": "Fallback bucketed, full rollout features should be on for any ID",
        "feature": "feature_flags/simple/full_rollout_fallback.json",
        "id": "10321",
        "guid": null,
        "properties": {},
        "returns": true
      },{
        "why": "Fallback bucketed, full rollout features should be on for any GUID",
        "feature": "feature_flags/simple/full_rollout_fallback.json",
        "id": "54888",
        "guid": null,
        "properties": {},
        "returns": true
      },{
        "why": "Fallback bucketed, full rollout features should fail when no ID or GUID given",
        "feature": "feature_flags/simple/full_rollout_fallback.json",
        "id": null,
        "guid": null,
        "properties": {},
        "error": true,
        "returns": false
      }
    ]
  },{
    "section": "Basic Single bucketing functionality",
    "examples": [
      {
        "why": "Single bucketed, full rollout features should be on for any ID or GUID",
        "feature": "feature_flags/simple/full_rollout_single.json",
        "id": "10321",
        "guid": "5b189db0-dc19-4b0f-b06e-68e7ffa2e5b8",
        "properties": {},
        "returns": true
      },{
        "why": "Single bucketed, zero rollout features should be off for any ID or GUID",
        "feature": "feature_flags/simple/zero_rollout_single.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {},
        "returns": false
      },{
        "why": "Single bucketed, full rollout features should be on when no ID or GUID given",
        "feature": "feature_flags/simple/full_rollout_single.json",
        "id": null,
        "guid": null,
        "properties": {},
        "returns": true
      },{
        "why": "Single bucketed, zero rollout features should be off when no ID or GUID given",
        "feature": "feature_flags/simple/zero_rollout_single.json",
        "id": null,
        "guid": null,
        "properties": {},
        "returns": false
      }
    ]
  },{
    "section": "Basic determination functionality",
    "examples": [
      {
        "why": "Each GUID has a rollout which just excludes it",
        "feature": "feature_flags/simple/32768_rollout.json",
        "id": null,
        "guid": "65464efc-9230-4ce7-bb12-ea3e01385bcd",
        "properties": {},
        "returns": false
      },{
        "why": "Each GUID has a rollout which just includes it",
        "feature": "feature_flags/simple/32769_rollout.json",
        "id": null,
        "guid": "65464efc-9230-4ce7-bb12-ea3e01385bcd",
        "properties": {},
        "returns": true
      },{
        "why": "Each ID has a rollout which just excludes it",
        "feature": "feature_flags/simple/32768_rollout.json",
        "id": "31467",
        "guid": null,
        "properties": {},
        "returns": false
      },{
        "why": "Each ID has a rollout which just includes it",
        "feature": "feature_flags/simple/32769_rollout.json",
        "id": "31467",
        "guid": null,
        "properties": {},
        "returns": true
      }
    ]
  },{
    "section": "Fixed determination functionality",
    "examples": [
    {
        "why": "When the actor's properties matches the fixed_determinations contraints the determination is fixed",
        "feature": "feature_flags/fixed_determinations/high_low_spread_constraints.json",
        "id": "10321",
        "guid": "5b189db0-dc19-4b0f-b06e-68e7ffa2e5b8",
        "properties": {
            "group_a": ["true"]
        },
        "returns": true
      },{
        "why": "When the actor's properties matches a single fixed_determinations constraints when there are multiple fixed_determinations constraints the determination is fixed",
        "feature": "feature_flags/fixed_determinations/high_low_spread_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
            "group_b": ["true"]
        },
        "returns": false
      },{
        "why": "When the actor's properties match the contraints for multiple fixed determinations, the first fixed determination will be chosen",
        "feature": "feature_flags/fixed_determinations/high_low_spread_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
            "group_a": ["true"],
            "group_b": ["true"]
        },
        "returns": true
      },
      {
        "why": "When the actor's property exists within the fixed determination constraints array the determination is fixed",
        "feature": "feature_flags/fixed_determinations/array_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
          "attribute": ["a"]
        },
        "returns": true
      },{
        "why": "When the actor's property does not exist within the fixed determination constraints array the determination is not fixed",
        "feature": "feature_flags/fixed_determinations/array_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
          "attribute": ["d"]
        },
        "returns": false
      },{
        "why": "When the actors properties matches the fixed_determinations constraints and on is set to false the determination is fixed as being off",
        "feature": "feature_flags/fixed_determinations/feature_switched_off.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
          "attribute": ["a"]
        },
        "returns": false
      },{
        "why": "When the actor's property array overlaps with the fixed determination containing an app_version the determination is fixed",
        "feature": "feature_flags/fixed_determinations/app_version_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
            "app_version": ["2.3.0", "0.4.0", "1.3.0"]
        },
        "returns": true
      },{
        "why": "When the actor's property array does not overlap with the fixed determination containing an app_version the determination is not fixed",
        "feature": "feature_flags/fixed_determinations/app_version_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
            "app_version": ["0.2.0"]
        },
        "returns": false
      },{
        "why": "When the actor's property array overlaps with the fixed determination containing a request.app_version the determination is fixed",
        "feature": "feature_flags/fixed_determinations/structured_app_version_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
            "request.app_version": ["2.3.0", "0.4.0", "1.3.0"]
        },
        "returns": true
      },{
        "why": "When the actor's property array does not overlap with the fixed determination containing a request.app_version the determination is not fixed",
        "feature": "feature_flags/fixed_determinations/structured_app_version_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
            "request.app_version": ["0.2.0"]
        },
        "returns": false
      },{
        "why": "When the actor's property array matches all the constraints in a fixed determination the determination is fixed",
        "feature": "feature_flags/fixed_determinations/multiple_constraints.json",
        "id": "10321",
        "guid": "5b189db0-dc19-4b0f-b06e-68e7ffa2e5b8",
        "properties": {
            "attribute_1": ["b"],
            "attribute_2": ["x"]
        },
        "returns": true
      },{
        "why": "When the actor's property array partially matches the constraints in a fixed determination the determination is not fixed",
        "feature": "feature_flags/fixed_determinations/multiple_constraints.json",
        "id": "10321",
        "guid": "5b189db0-dc19-4b0f-b06e-68e7ffa2e5b8",
        "properties": {
          "attribute_1": ["c"]
        },
        "returns": false
      }
    ]
  },{
    "section": "Target group functionality",
    "examples": [
    {
        "why": "A feature is rolled out if a target group's contraints are met by the given properties",
        "feature": "feature_flags/target_groups/high_low_spread_constraints.json",
        "id": "10321",
        "guid": "5b189db0-dc19-4b0f-b06e-68e7ffa2e5b8",
        "properties": {
            "group_a": ["true"]
        },
        "returns": true
      },{
        "why": "A feature is not rolled out to the extent specified by a target group whose contraints are not met by the given properties",
        "feature": "feature_flags/target_groups/high_low_spread_constraints.json",
        "id": "10321",
        "guid": "5b189db0-dc19-4b0f-b06e-68e7ffa2e5b8",
        "properties": {
            "group_b": ["true"]
        },
        "returns": false
      },{
        "why": "When the actor's properties match two target groups, the feature is on when their indicator includes them in either rollout",
        "feature": "feature_flags/target_groups/high_low_spread_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
            "group_a": ["true"],
            "group_b": ["true"]
        },
        "returns": true
      },{
        "why": "When the actor's property exists within the target group constraints array the feature is on",
        "feature": "feature_flags/target_groups/array_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
            "attribute": ["a"]
        },
        "returns": true
      },{
        "why": "When the actor's property does not exist within the target group constraints array the feature is off",
        "feature": "feature_flags/target_groups/array_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
            "attribute": ["d"]
        },
        "returns": false
      },{
        "why": "When the actor's property array overlaps with the target group constraints array the feature is on",
        "feature": "feature_flags/target_groups/array_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
            "attribute": ["c", "d"]
        },
        "returns": true
      },{
        "why": "When the actor's property array does not overlap with the target group constraints array the feature is off",
        "feature": "feature_flags/target_groups/array_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
            "attribute": ["d", "e"]
        },
        "returns": false
      },{
        "why": "When the actor's property array overlaps with the target group containing an app_version the feature is on",
        "feature": "feature_flags/target_groups/app_version_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
            "app_version": ["2.3.0", "0.4.0", "1.3.0"]
        },
        "returns": true
      },{
        "why": "When the actor's property array does not overlap with the target group containing an app_version the feature is off",
        "feature": "feature_flags/target_groups/app_version_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
            "app_version": ["0.2.0"]
        },
        "returns": false
      },{
        "why": "When the actor's property array overlaps with the target group containing a request.app_version the feature is on",
        "feature": "feature_flags/target_groups/structured_app_version_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
            "request.app_version": ["2.3.0", "0.4.0", "1.3.0"]
        },
        "returns": true
      },{
        "why": "When the actor's property array does not overlap with the target group containing a request.app_version the feature is off",
        "feature": "feature_flags/target_groups/structured_app_version_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
            "app_version": ["0.2.0"]
        },
        "returns": false
      },{
        "why": "When the actor's property array matches all the constraints in a target group",
        "feature": "feature_flags/target_groups/multiple_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
            "attribute_1": ["b"],
            "attribute_2": ["x"]
        },
        "returns": true
      },{
        "why": "When the actor's property array partially matches the constraints in a target group",
        "feature": "feature_flags/target_groups/multiple_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
          "attribute_1": ["c"]
        },
        "returns": false
      },{
        "why": "When the actor's property array partially matches the second set of constraints in a target group",
        "feature": "feature_flags/target_groups/multiple_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
          "attribute_2": ["x"]
        },
        "returns": false
      },{
        "why": "When the actor's property array has additional properties but matches all the constraints in a target group",
        "feature": "feature_flags/target_groups/multiple_constraints.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
          "attribute_1": ["b"],
          "attribute_2": ["x"],
          "attribute_3": ["q"]
        },
        "returns": true
      }
    ]
  },{
    "section": "Override functionality",
    "examples": [
      {
        "why": "A feature flag that should be off can be overridden to be on for specific IDs",
        "feature": "feature_flags/overridden.json",
        "id": "1",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {},
        "returns": true
      },{
        "why": "A feature flag that should be on can be overridden to be off for specific IDs",
        "feature": "feature_flags/overridden.json",
        "id": "0",
        "guid": "5b189db0-dc19-4b0f-b06e-68e7ffa2e5b8",
        "properties": {},
        "returns": false
      },{
        "why": "An experiment that should be on can be overridden to be off for specific IDs",
        "feature": "experiments/overridden.json",
        "id": "0",
        "guid": "5b189db0-dc19-4b0f-b06e-68e7ffa2e5b8",
        "properties": {},
        "returns": false
      },{
        "why": "An experiment that should be off can be overridden to be in a specific variant for specific IDs",
        "feature": "experiments/overridden.json",
        "id": "65",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {},
        "returns": "a"
      },{
        "why": "An inactive feature flag cannot be overridden",
        "feature": "feature_flags/inactive_overridden.json",
        "id": "1",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {},
        "returns": false
      }
    ]
  },{
    "section": "Malformed features",
    "examples": [
      {
        "why": "Features missing 'active' are assumed to be inactive",
        "feature": "feature_flags/malformed/missing_active.json",
        "id": "10321",
        "guid": "5b189db0-dc19-4b0f-b06e-68e7ffa2e5b8",
        "properties": {},
        "returns": false
      },{
        "why": "Features without any target groups are always off",
        "feature": "feature_flags/malformed/no_target_group.json",
        "id": "10321",
        "guid": "5b189db0-dc19-4b0f-b06e-68e7ffa2e5b8",
        "properties": {},
        "returns": false
      },{
        "why": "Features with an unknown bucket type should be off, but raise an error",
        "feature": "feature_flags/malformed/invalid_bucket_type.json",
        "id": "10321",
        "guid": "5b189db0-dc19-4b0f-b06e-68e7ffa2e5b8",
        "properties": {},
        "returns": false,
        "error": true
      },{
        "why": "Target groups with invalid rollouts are ignored",
        "feature": "feature_flags/malformed/invalid_rollout.json",
        "id": "10321",
        "guid": "5b189db0-dc19-4b0f-b06e-68e7ffa2e5b8",
        "properties": {},
        "returns": false
      },{
        "why": "Target groups with malformed app_version are ignored",
        "feature": "feature_flags/malformed/malformed_app_version.json",
        "id": "54888",
        "guid": "d641e1bb-652c-4bb1-a54f-e18b6c1a9746",
        "properties": {
          "app_version": ["1.3.0"]
        },
        "returns": false
      },{
        "why": "Features with constraints which contain non-strings should be off, but raise an error",
        "feature": "feature_flags/malformed/invalid_constraints_number.json",
        "id": "10321",
        "guid": "5b189db0-dc19-4b0f-b06e-68e7ffa2e5b8",
        "properties": {},
        "returns": false,
        "error": true
      },{
        "why": "Features with constraints which are not arrays should be off, but raise an error",
        "feature": "feature_flags/malformed/invalid_constraints_scalar.json",
        "id": "10321",
        "guid": "5b189db0-dc19-4b0f-b06e-68e7ffa2e5b8",
        "properties": {},
        "returns": false,
        "error": true
      }
    ]
  }
]
